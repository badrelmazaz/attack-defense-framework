- name: Create user accounts with full name and sudo group
  ansible.builtin.user:
    name: "{{ item.username }}"
    comment: "{{ item.name }}"
    shell: /bin/bash
    create_home: yes
    groups: sudo
    append: yes
    state: present
  loop: "{{ users }}"

- name: Configure passwordless sudo
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ item.username }}"
    content: "{{ item.username }} ALL=(ALL) NOPASSWD:ALL"
    owner: root
    group: root
    mode: '0440'
  loop: "{{ users }}"

- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "/home/{{ item.username }}/.ssh"
    state: directory
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: '0700'
  loop: "{{ users }}"

- name: Generate SSH key pair for each user
  ansible.builtin.openssh_keypair:
    path: "/home/{{ item.username }}/.ssh/id_ed25519"
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: '0600'
    type: ed25519
    comment: "{{ item.username }}@{{ inventory_hostname }}"
    force: no
  loop: "{{ users }}"

- name: Set authorized_keys from generated public key
  ansible.builtin.copy:
    src: "/home/{{ item.username }}/.ssh/id_ed25519.pub"
    dest: "/home/{{ item.username }}/.ssh/authorized_keys"
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: '0600'
    remote_src: yes
  loop: "{{ users }}"

- name: Ensure /root/backup/keys directory exists
  ansible.builtin.file:
    path: /root/backup/keys
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Backup private keys to /root/backup/keys
  ansible.builtin.copy:
    src: "/home/{{ item.username }}/.ssh/id_ed25519"
    dest: "/root/backup/keys/{{ item.username }}.key"
    remote_src: yes
    owner: root
    group: root
    mode: '0600'
  loop: "{{ users }}"


